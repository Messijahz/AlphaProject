@model ProjectListViewModel

@{
    ViewData["Title"] = "Projects";
}

<div class="d-flex justify-content-between align-items-center">
    <h2>Projects</h2>

    @await Html.PartialAsync("Partials/Components/_AddProjectButton")
    @await Html.PartialAsync("Partials/Modals/_AddProjectModal", Model.AddProjectForm)



</div>
<div class="listed-projects">
    <a asp-controller="Projects" asp-action="Index" asp-route-status="">
        ALL [@Model.AllProjects.Count]
    </a>

    <a asp-controller="Projects" asp-action="Index" asp-route-status="started">
        STARTED [@Model.AllProjects.Count(p => p.StatusId == Guid.Parse("55555555-5555-5555-5555-555555555555"))]
    </a>

    <a asp-controller="Projects" asp-action="Index" asp-route-status="completed">
        COMPLETED [@Model.AllProjects.Count(p => p.StatusId == Guid.Parse("66666666-6666-6666-6666-666666666666"))]
    </a>
</div>



<div class="divider"></div>


<div class="projects-container">
    @foreach (var project in Model.FilteredProjects)
    {
        @await Html.PartialAsync("Partials/Components/_ProjectCard", project)
    }
</div>

<div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-container">
        </div>
    </div>
</div>